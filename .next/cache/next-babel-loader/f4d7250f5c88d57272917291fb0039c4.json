{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chris/CodeProjects/gluten-free-advisor-frontend/pages/restaurants/[id].js\";\nimport Layout from \"../../components/Layout\";\nimport { getEatery, getEateries } from \"../../services/apiService\";\n\nconst Restaurant = ({\n  restaurant\n}) => {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: \"Hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const eateries = await getEateries(); // Get the paths we want to pre-render based on posts\n\n  const paths = eateries.data.map(eatery => `/restaurants/${eatery.id}`); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const json = await getEatery(params.id);\n  return {\n    props: {\n      json\n    }\n  };\n}\nexport default Restaurant;","map":{"version":3,"sources":["/Users/chris/CodeProjects/gluten-free-advisor-frontend/pages/restaurants/[id].js"],"names":["Layout","getEatery","getEateries","Restaurant","restaurant","getStaticPaths","eateries","paths","data","map","eatery","id","fallback","getStaticProps","params","json","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,2BAAvC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,QAAQ,GAAG,MAAMJ,WAAW,EAAlC,CAFqC,CAIrC;;AACA,QAAMK,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,MAAD,IAAa,gBAAeA,MAAM,CAACC,EAAG,EAAxD,CAAd,CALqC,CAOrC;AACA;;AACA,SAAO;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,IAAI,GAAG,MAAMd,SAAS,CAACa,MAAM,CAACH,EAAR,CAA5B;AAEA,SAAO;AACLK,IAAAA,KAAK,EAAE;AAAED,MAAAA;AAAF;AADF,GAAP;AAGD;AAED,eAAeZ,UAAf","sourcesContent":["import Layout from \"../../components/Layout\";\nimport { getEatery, getEateries } from \"../../services/apiService\";\n\nconst Restaurant = ({ restaurant }) => {\n  return <Layout>Hi</Layout>;\n};\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const eateries = await getEateries();\n\n  // Get the paths we want to pre-render based on posts\n  const paths = eateries.data.map((eatery) => `/restaurants/${eatery.id}`);\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({ params }) {\n  const json = await getEatery(params.id);\n\n  return {\n    props: { json },\n  };\n}\n\nexport default Restaurant;\n"]},"metadata":{},"sourceType":"module"}