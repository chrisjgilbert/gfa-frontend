{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chris/CodeProjects/gluten-free-advisor-frontend/components/Reviews.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Review from \"./Review.js\";\n\nconst Reviews = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: data.map(review => /*#__PURE__*/_jsxDEV(Review, _objectSpread({}, review.attributes), review.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Reviews;","map":{"version":3,"sources":["/Users/chris/CodeProjects/gluten-free-advisor-frontend/components/Reviews.js"],"names":["Review","Reviews","data","map","review","attributes","id"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,sBACE;AAAA,2BACE;AAAA,gBACGA,IAAI,CAACC,GAAL,CAAUC,MAAD,iBACR,QAAC,MAAD,oBAA4BA,MAAM,CAACC,UAAnC,GAAaD,MAAM,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,eAAeL,OAAf","sourcesContent":["import Review from \"./Review.js\";\n\nconst Reviews = ({ data }) => {\n  return (\n    <ul>\n      <li>\n        {data.map((review) => (\n          <Review key={review.id} {...review.attributes} />\n        ))}\n      </li>\n    </ul>\n  );\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}