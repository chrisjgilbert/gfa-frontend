{"ast":null,"code":"import _defineProperty from \"/Users/chris/CodeProjects/gluten-free-advisor-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chris/CodeProjects/gluten-free-advisor-frontend/pages/restaurants/[id].js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from \"../../components/Layout\";\nimport ReviewList from \"../../components/ReviewList\";\n\nvar Restaurant = function Restaurant(_ref) {\n  var eatery = _ref.eatery,\n      reviews = _ref.reviews;\n  var name = eatery.name,\n      address = eatery.address;\n  console.log(reviews);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ReviewList, _objectSpread({}, reviews), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Restaurant;\nexport var __N_SSG = true;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["/Users/chris/CodeProjects/gluten-free-advisor-frontend/pages/restaurants/[id].js"],"names":["Layout","ReviewList","Restaurant","eatery","reviews","name","address","console","log"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAAA,MAClCC,IADkC,GAChBF,MADgB,CAClCE,IADkC;AAAA,MAC5BC,OAD4B,GAChBH,MADgB,CAC5BG,OAD4B;AAG1CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,UAAD,oBAAgBF,OAAhB;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAXD;;KAAMF,U;;AA+CN,eAAeA,UAAf","sourcesContent":["import Layout from \"../../components/Layout\";\nimport ReviewList from \"../../components/ReviewList\";\n\nconst Restaurant = ({ eatery, reviews }) => {\n  const { name, address } = eatery;\n\n  console.log(reviews);\n  return (\n    <Layout>\n      <h1>{name}</h1>\n      <p>{address}</p>\n      <ReviewList {...reviews} />\n    </Layout>\n  );\n};\n\nexport async function getStaticPaths() {\n  // get all restaurants\n  const response = await fetch(\"http://localhost:8080/api/eateries\");\n  const restaurants = await response.json();\n\n  // Get the paths we want to pre-render based on restaurants\n  const paths = restaurants.data.map(\n    (restaurant) => `/restaurants/${restaurant.id}`\n  );\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false };\n}\n\nexport async function getStaticProps({ params }) {\n  const { id } = params;\n  const eateryResponse = await fetch(\n    `http://localhost:8080/api/eateries/${id}`\n  );\n  const reviewsResponse = await fetch(\n    `http://localhost:8080/api/eateries/${id}/reviews`\n  );\n  const eateryJson = await eateryResponse.json();\n  const reviewsJson = await reviewsResponse.json();\n\n  return {\n    props: {\n      eatery: eateryJson.data.attributes,\n      reviews: reviewsJson,\n    },\n  };\n}\n\nexport default Restaurant;\n"]},"metadata":{},"sourceType":"module"}